@model Cursos.Models.ApplicationUser
@using Cursos.Helpers

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuario - Editar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoleName", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        @{string visible = UsuarioHelper.GetInstance().ObtenerRoleName(Model.Roles.ElementAt(0).RoleId) == "ConsultaEmpresa" ? "display:block" : "display:none"; }

        <div class="form-group" style="@visible" id="SeccionDatosEmpresa">
            @Html.Label("Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmpresaID", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group" style="@visible" id="SeccionPermitirInscripcionesExternas">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBox("PermitirInscripcionesExternas", (bool)ViewBag.PermitirInscripcionesExternas)
                    @Html.Label("Permitir Incripciones Externas", htmlAttributes: new { @class = "control-label" })
                </div>
            </div>
        </div>

        @{visible = UsuarioHelper.GetInstance().ObtenerRoleName(Model.Roles.ElementAt(0).RoleId) == "InstructorExterno" ? "display:block" : "display:none"; }

        <div class="form-group" style="@visible" id="SeccionDatosInstructor">
            @Html.Label("Instructor", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("InstructorID", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasSignatureFooter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasSignatureFooter, new { htmlAttributes = new { @onclick = "toggleSignatureFooterFields();" } })
                    @Html.ValidationMessageFor(model => model.HasSignatureFooter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @{ var estiloSignature = Model.HasSignatureFooter ? "display:block" : "display:none"; }
        <div id="signatureFooterContainer" class="form-group" style="@estiloSignature; border: 1px solid #ccc; border-radius: 10px; padding: 15px; background-color: #f8f9fa;">
            <div class="form-group">
                @Html.LabelFor(model => model.SignatureFooter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.SignatureFooter, new { @class = "form-control", id = "SignatureFooter" })
                    @Html.ValidationMessageFor(model => model.SignatureFooter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.9.1/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.9.1/summernote-lite.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#SignatureFooter').summernote({
                height: 300,
                placeholder: 'Pie de firma...',
                tabsize: 2
            });
            toggleSignatureFooterFields();
        });

        function toggleSignatureFooterFields() {
            if ($('#HasSignatureFooter').is(':checked')) {
                $('#signatureFooterContainer').show();
            } else {
                $('#signatureFooterContainer').hide();
                if ($('#SignatureFooter').summernote) {
                    $('#SignatureFooter').summernote('reset');
                }
                $('#SignatureFooter').val('');
            }
        }
        $(function () {
            $('#RoleName').change(function () {
                var value = $(this).val();
                if (value == 'ConsultaEmpresa') {
                    $('#SeccionDatosEmpresa').show();
                    $('#SeccionPermitirInscripcionesExternas').show();
                } else {
                    $('#SeccionDatosEmpresa').hide();
                    $('#SeccionPermitirInscripcionesExternas').hide();

                    $("#PermitirInscripcionesExternas").prop("checked", false);
                }

                if (value == 'InstructorExterno') {
                    $('#SeccionDatosInstructor').show();
                } else {
                    $('#SeccionDatosInstructor').hide();
                }
            });
        })
    </script>
}
