@model Cursos.Models.Capacitado
@using Cursos.Helpers;
@using Cursos.Models.Enums;

@{
    ViewBag.Title = "Details";
}

<div>
    <div style="background-color: whitesmoke; padding-left: 10px; padding-bottom: 10px; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
        <table>
            <tr>
                <td style="padding-right: 10px">
                    @if (Model.PathArchivo != null)
                    {
                        <a href="~/images/FotosCapacitados/@Model.PathArchivo.PathCompleto">
                            <img src="~/images/FotosCapacitados/@Model.PathArchivo.PathCompleto?width=150&height=150&mode=crop&anchor=top" alt="" />
                        </a>
                    }
                    else
                    {
                        <img src="~/images/sinfoto_150x150.png" alt="Sin foto asociada" />
                    }
                </td>
                <td>
                    <h4>Capacitado</h4>

                    @{ 
                        string edad = "";

                        if (Model.Edad > 0)
                        {
                            edad = string.Format("({0} años)", Model.Edad.ToString());
                        }
                    }

                    <dl class="dl-horizontal">

                        <dt>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.NombreCompleto)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Documento)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.DocumentoCompleto)
                        </dd>

                        <dt>
                            Empresa
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Empresa.NombreFantasia)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Fecha)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Fecha) @edad
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Telefono)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Telefono)
                        </dd>

                    </dl>
                </td>
            </tr>
        </table>
    </div>

    @Html.Partial("_DatosModificacionPartial", Model)

<p style="vertical-align: middle;">
    <a href="@Url.Action("Index") "><span class="glyphicon glyphicon-circle-arrow-left" style="font-size: 25px; color: #017d49"></span>&nbsp;Regresar</a>
    @if (Model.PuedeModificarse())
    {
        @:&nbsp; &nbsp; &nbsp;
        <a href="@Url.Action("Edit", new { id = Model.CapacitadoID })"><span class="glyphicon glyphicon-edit" style="font-size: 25px; color: #017d49"></span>&nbsp;Editar</a>
    }
    @if (User.IsInRole("Administrador") || User.IsInRole("AdministradorExterno"))
    {
        @:&nbsp; &nbsp; &nbsp;
        <a href="@Url.Action("CreateWithCapacitado", "RegistrosCapacitacion", new { id = Model.CapacitadoID }, null)"><span class="glyphicon glyphicon-log-in" style="font-size: 25px; color: #017d49"></span>&nbsp;&nbsp;Agregar Registro de capacitación</a>
    }
    @if ((User.IsInRole("Administrador") || User.IsInRole("ConsultaEmpresa")) && Model.ObtenerRegistrosCapacitacionVigentes().Count > 0)
    {
        @:&nbsp; &nbsp; &nbsp;
        <a href="@Url.Action("Details", new { id = Model.CapacitadoID, generarCertificado = true })"><span class="glyphicon glyphicon-save" style="font-size: 25px; color: #017d49"></span>&nbsp;Descargar certificado</a>
    }
</p>

    <hr />

</div>

@if (Model.RegistrosCapacitacion.Where(r => r.Estado == EstadosRegistroCapacitacion.Inscripto).Count() > 0)
{ 
<h4>Jornadas a las que está inscrpto</h4>

<table class="table">
    @foreach (var item in Model.RegistrosCapacitacion.Where(r => r.Estado == EstadosRegistroCapacitacion.Inscripto).OrderByDescending(r => r.Jornada.Fecha))
    {
        <tr>
            <td>
                <a href="@Url.Action("Details", "Jornadas", new { id = item.JornadaID }) "><img src="@Url.Content("~/images/verDetalle_16x16.png")" title="Ver detalle de jornada" /></a>
                @Html.DisplayFor(modelItem => item.Jornada.JornadaIdentificacionCompleta)
            </td>
        </tr>
    }
</table>

<hr />

}

<h4>Registros de capacitación</h4>

<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayName("Jornada")
        </th>
        <th>
            @Html.DisplayName("Nota Previa")
        </th>
        <th>
            @Html.DisplayName("Nota")
        </th>
        <th>
            @Html.DisplayName("Aprobado")
        </th>
        @if (User.Identity.IsAuthenticated)
        {
            <th></th> <!--Columna con acciones sobre el registro -->
        }
    </tr>

    @foreach (var item in Model.ObtenerRegistrosCapacitacionEvaluados().OrderByDescending(r => r.Jornada.Fecha))
    {
        string bgcolor = item.Jornada.Curso.ColorDeFondo != null ? item.Jornada.Curso.ColorDeFondo : "whitesmoke";
        string srcImagen = string.Empty;
        string titleTexto = string.Empty;

        ImagenEstadoRegistroHelper.GetInstance().ObtenerImagenYTitulo(item, ref srcImagen, ref titleTexto);
        srcImagen = Url.Content(srcImagen);

        <tr style="background-color: @bgcolor;">
            <td><img src="@srcImagen" )" title="@titleTexto" /></td>
            <td>
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="@Url.Action("Details", "Jornadas", new { id = item.JornadaID }) "><img src="@Url.Content("~/images/verDetalle_16x16.png")" title="Ver detalle de jornada" /></a>
                }
                @Html.DisplayFor(modelItem => item.Jornada.JornadaIdentificacionCompleta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NotaPrevia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nota)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Aprobado)
            </td>
            @if (item.PuedeModificarse())
            {
                <td>
                    <a href="@Url.Action("Delete", "RegistrosCapacitacion", new { id = item.RegistroCapacitacionID }) "><img src="@Url.Content("~/images/borrar_16x16.png")" title="Borrar" /></a>
                </td>
            }
            else
            {
                <td>&nbsp;</td>
            }
        </tr>
    }
</table>