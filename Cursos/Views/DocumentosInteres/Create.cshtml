@model Cursos.Models.DocumentoInteres

@{
    ViewBag.Title = "Crear Documento de Interés";
}

<h2>Crear Documento de Interés</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @maxlength = "200" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @rows = "4", @maxlength = "1000" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                <small class="form-text text-muted">Máximo 1000 caracteres</small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreArchivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreArchivo, new { htmlAttributes = new { @class = "form-control", @maxlength = "255" } })
                @Html.ValidationMessageFor(model => model.NombreArchivo, "", new { @class = "text-danger" })
                <small class="form-text text-muted">Incluir la extensión del archivo (ej: documento.pdf)</small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
                @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
