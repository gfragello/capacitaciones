@model IEnumerable<Cursos.Models.RegistroCapacitacion>
@using Cursos.Models.Enums;
@using Cursos.Helpers;

<table class="table table-striped">
    <tr>
        <th><!--Número de línea--></th>
        <th>
            @Html.DisplayNameFor(model => model.Capacitado.Documento)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Capacitado.Nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Capacitado.Empresa)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Nota)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Estado)
        </th>
        @if (!User.IsInRole("InscripcionesExternas"))
        {
            <th>
                @Html.DisplayNameFor(model => model.EnvioOVALEstado)
            </th>
        }
        <th></th>
    </tr>

    @{ int numeroLinea = 1; }

    @foreach (var item in Model)
    {
        string labelClass = EstadosRegistroCapacitacionHelper.GetInstance().ObtenerLabelClassEstado(item.Estado);
        <tr>
            <td>
                @string.Format("{0}.", numeroLinea++.ToString().PadLeft(2, '0'))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacitado.DocumentoCompleto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacitado.NombreCompleto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacitado.Empresa.NombreFantasia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nota)
            </td>
            <td>
                <span class="label @labelClass">@item.Estado</span>
            </td>
            @if (!User.IsInRole("InscripcionesExternas"))
            {
                <td style="text-align:center">
                    @Html.Raw(RegistroCapacitacionHelper.GetInstance().ObtenerImagenEnvioOVALEstado(item))
                </td>
            }
            <td>
                @if (item.Jornada.PuedeModificarse())
                {
                    <a href="@Url.Action("Edit", "RegistrosCapacitacion", new { id = item.RegistroCapacitacionID }) "><img src="@Url.Content("~/images/editar_16x16.png")" title="Editar" /></a>@:&nbsp;|
                }
                @switch (item.TipoEliminacionPermitida)
                {
                    case TipoEliminacionEnum.EliminacionSimple:
                        <a href="javascript:if (confirm('¿Confirma eliminación del inscripto?')) eliminarRegistroCapacitacion(@item.RegistroCapacitacionID);"><img src="@Url.Content("~/images/borrar_16x16.png")" title="Borrar" /></a>
                        break;

                    case TipoEliminacionEnum.EliminacionConRevision:
                        <a href="@Url.Action("Delete", "RegistrosCapacitacion", new { id = item.RegistroCapacitacionID }) "><img src="@Url.Content("~/images/borrar_16x16.png")" title="Borrar" /></a>
                        break;
                }
                &nbsp;
            </td>
        </tr>
    }

</table>