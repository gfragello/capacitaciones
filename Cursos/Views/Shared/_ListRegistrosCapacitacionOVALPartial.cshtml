@model PagedList.IPagedList<Cursos.Models.RegistroCapacitacion>
@using Cursos.Models.Enums;
@using Cursos.Helpers;

<table class="table table-striped">
    <tr>
        <th>
            Documento
        </th>
        <th>
            Nombre
        </th>
        <th>
            Estado último envío
        </th>
        <th>
            Fecha último envío
        </th>
        <th>
            Mensaje último envío
        </th>
        <th>&nbsp;</th>
    </tr>

    @foreach (var item in Model)
    {
        string labelClass = EstadosRegistroCapacitacionHelper.GetInstance().ObtenerLabelClassEstado(item.Estado);
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Capacitado.DocumentoCompleto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacitado.NombreCompleto)
            </td>
            <td style="text-align:center">
                @Html.Raw(RegistroCapacitacionHelper.GetInstance().ObtenerImagenEnvioOVALEstado(item))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnvioOVALFechaHora)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnvioOVALMensaje)
            </td>
            <td>
                @if (item.ListoParaEnviarOVAL)
                {
                    <span id="@string.Format("spanEnviarOVAL_{0}", item.RegistroCapacitacionID.ToString())" data-registrocapacitacionid="@item.RegistroCapacitacionID.ToString()" class="glyphicon glyphicon-transfer btnEnvioRegistroOVAL" style="font-size: 25px; color: #017d49; cursor: pointer;" title="Enviar registro a sistema OVAL"></span>
                }
                else
                {
                    @:&nbsp;
                }
            </td>
        </tr>
    }

</table>
