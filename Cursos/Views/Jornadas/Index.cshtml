@model PagedList.IPagedList<Cursos.Models.Jornada>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Jornada";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-12">
            <h2>Jornadas</h2>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-12">
            <div class="btn-group">
                @Html.ActionLink("Crear Nueva", "Create", null, new { @class = "btn btn-primary" })
                @if (!User.IsInRole("InstructorExterno"))
                {
                    @Html.ActionLink("Próximas disponibles", "Disponibles", null, new { @class = "btn btn-primary ml-2" })
                }
                @if (User.IsInRole("Administrador"))
                {
                    @Html.ActionLink("Exportar a Excel", "Index",
                        new
                             {
                            currentCursoID = ViewBag.CurrentCursoID,
                            currentFechaInicio = ViewBag.CurrentFechaInicio,
                            currentFechaFin = ViewBag.CurrentFechaFin,
                            currentCreadasOtrosUsuarios = ViewBag.CurrentCreadasOtrosUsuarios,
                            exportarExcel = true
                        },
                        new { @class = "btn btn-primary ml-2" })
                }
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-light">
            <a href="javascript:void(0);" class="filter-toggle" id="toggleFilters">
                Ocultar Filtros
            </a>
        </div>
        <div id="filterContent">
            <div class="card-body">
                @using (Html.BeginForm("Index", "Jornadas", FormMethod.Get, new { @class = "form" }))
                {
                    <div class="row">
                        <div class="col-md-4 col-sm-6 mb-3">
                            <div class="form-group">
                                <label for="CursoID">Curso:</label>
                                @Html.DropDownList("CursoID", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-6 mb-3">
                            <div class="form-group">
                                <label for="fechaInicio">Desde:</label>
                                @Html.TextBox("fechaInicio", ViewBag.CurrentFechaInicio as string, new { @class = "form-control datepicker" })
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-6 mb-3">
                            <div class="form-group">
                                <label for="fechaFin">Hasta:</label>
                                @Html.TextBox("fechaFin", ViewBag.CurrentFechaFin as string, new { @class = "form-control datepicker" })
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-6 mb-3">
                            <div class="checkbox-container">
                                <label for="creadasOtrosUsuarios">Creadas otros usuarios:</label>
                                @{bool creadasOtrosUsuarios = ViewBag.CurrentCreadasOtrosUsuarios != null ? ViewBag.CurrentCreadasOtrosUsuarios : true;}
                                @Html.CheckBox("creadasOtrosUsuarios", creadasOtrosUsuarios, new { @class = "form-check-input" })
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-6 mb-3">
                            <div class="checkbox-container">
                                <label for="autorizacionPendiente">Autorización pendiente:</label>
                                @{bool autorizacionPendiente = ViewBag.CurrentAutorizacionPendiente != null ? ViewBag.CurrentAutorizacionPendiente : false;}
                                @Html.CheckBox("autorizacionPendiente", autorizacionPendiente, new { @class = "form-check-input" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 text-right">
                            <div class="btn-group">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fa fa-search"></i> Buscar
                                </button>
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary ml-2">
                                    <i class="fa fa-eraser"></i> Limpiar filtros
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-12">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentCursoID = ViewBag.CurrentCursoID, currentFechaInicio = ViewBag.CurrentFechaInicio, currentFechaFin = ViewBag.CurrentFechaFin, currentCreadasOtrosUsuarios = ViewBag.CurrentCreadasOtrosUsuarios }))
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="thead-light">
                <tr>
                    <th>&nbsp;</th>
                    <th>Curso</th>
                    <th>Intructor</th>
                    <th>Lugar</th>
                    <th>Dirección</th>
                    <th>Fecha</th>
                    <th>Hora</th>
                    <th>Disponibilidad</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    //si la jornada no tiene cupos disponibles se muestra el texto en color rojo
                    string textColor = item.CuposDisponibles ? "black" : "red";

                    <tr>
                        <td>
                            @if (item.UsuarioModificacion != User.Identity.Name)
                            {
                                <img src="@Url.Content("~/images/usuario_16x16.png")" title="@item.UsuarioModificacion - @item.FechaModficacion" alt="Usuario" />
                            }
                            else
                            {
                                @:&nbsp;
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Curso.Descripcion)</td>
                        <td>@Html.DisplayFor(modelItem => item.Instructor.NombreCompleto)</td>
                        <td>@Html.DisplayFor(modelItem => item.Lugar.NombreLugar)</td>
                        <td>@Html.DisplayFor(modelItem => item.Direccion)</td>
                        <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                        <td>@Html.DisplayFor(modelItem => item.Hora)</td>
                        <td style="color: @textColor">@Html.DisplayFor(modelItem => item.CantidadCuposDisponiblesTexto)</td>
                        <td class="text-center">
                            <div class="action-links">
                                <a href="@Url.Action("Details", "Jornadas", new { id = item.JornadaID })" class="action-icon" title="Ver detalle">
                                    <img src="@Url.Content("~/images/verDetalle_16x16.png")" alt="Ver detalle" />
                                </a>
                                @if (item.PuedeEditarUsuarioActual)
                                {
                                    <a href="@Url.Action("Edit", "Jornadas", new { id = item.JornadaID })" class="action-icon" title="Editar">
                                        <img src="@Url.Content("~/images/editar_16x16.png")" alt="Editar" />
                                    </a>
                                }
                                @if (item.PuedeEliminarUsuarioActual)
                                {
                                    <a href="@Url.Action("Delete", "Jornadas", new { id = item.JornadaID })" class="action-icon" title="Borrar">
                                        <img src="@Url.Content("~/images/borrar_16x16.png")" alt="Borrar" />
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-6">
            <p>Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount</p>
        </div>
        <div class="col-md-6">
            <nav aria-label="Paginación">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentCursoID = ViewBag.CurrentCursoID, currentFechaInicio = ViewBag.CurrentFechaInicio, currentFechaFin = ViewBag.CurrentFechaFin, currentCreadasOtrosUsuarios = ViewBag.CurrentCreadasOtrosUsuarios }))
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            // Inicializar datepickers
            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true
            });
        });
    </script>
}