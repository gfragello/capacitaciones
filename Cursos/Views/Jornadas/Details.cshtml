@model Cursos.Models.Jornada
@using PagedList;
@using Cursos.Helpers;

@{
    ViewBag.Title = "Jornada - Detalles";
}

@Html.HiddenFor(model => model.JornadaID)

<div id="modalMensaje" class="modal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Enviando notificaciones</h4>
            </div>
            <div id="bodyMensaje" class="modal-body" style="text-align: center;">
                @Html.Partial("_CargandoPartial", Model)
                <br />
                <p style="font-weight: bold;">Enviando datos al sistema OVAL</p>
                <p style="font-size: small;">@string.Format("Punto de servicio: {0}", Model.Curso.PuntoServicio != null ? Model.Curso.PuntoServicio.Nombre : string.Empty)</p>
                <p style="font-weight: bold; color: darkred">No cierre esta ventana</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>

    </div>
</div>

<div>
    <div style="background-color: whitesmoke; padding-left: 10px; padding-bottom: 10px; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
        <table>
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px"><h4>Jornada</h4></td>
                <td style="padding-right: 10px"><h3><span class="label label-default" style="color: #333333; background-color: @Model.Curso.ColorDeFondo">@Html.DisplayFor(model => model.Curso.Descripcion)</span></h3></td>
                <td style="vertical-align: bottom; padding-right: 10px"><h3>@String.Format("{0} {1} - {2} - {3}", Model.Fecha.ToShortDateString(), Model.Hora.Trim(), Model.Lugar.NombreLugar, Model.Instructor.NombreCompleto)</h3></td>
            </tr>
            @if (Model.RequiereAutorizacion)
            {
                <tr>
                    <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                        <label style="font-size:small;color:#000000">@Model.CreadaTexto</label>
                        &nbsp;&nbsp;
                        <label style="font-size:small;color:darkred">@Model.AutorizadaTexto</label>
                    </td>
                </tr>
            }

            <tr>
                <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                    <table>
                        <tr>
                            <td id="tdCantidadInscriptos" style="padding-right: 10px">
                                @Html.Raw(JornadaHelper.GetInstance().ObtenerLabelTotalInscriptos(Model))
                            </td>
                            @if (Model.TieneMaximoAsistentes)
                            { 
                                <td id="tdCantidadCuposDisponibles" style="padding-right: 10px">
                                    @Html.Raw(JornadaHelper.GetInstance().ObtenerLabelTotalCuposDisponibles(Model))
                                </td>
                            }
                            @if (Model.TieneCierreIncripcion)
                            {
                                <td id="tdCantidadCuposDisponibles" style="padding-right: 10px">
                                    @Html.Raw(JornadaHelper.GetInstance().ObtenerLabelCierreInscripcion(Model))
                                </td>
                            }
                            @if (Model.TieneMinimoAsistentes)
                            {
                                <td id="tdCantidadCuposDisponibles" style="padding-right: 10px">
                                    @Html.Raw(JornadaHelper.GetInstance().ObtenerLabelMinimoAsistentes(Model))
                                </td>
                            }
                            @if (Model.Curso.RequiereDocumentacionAdicionalInscripcion &&
                                (HttpContext.Current.User.IsInRole("Administrador") || HttpContext.Current.User.IsInRole("InstructorExterno")))
                            {
                                <td id="tdDocumentacionAdicional" style="padding-right: 10px">
                                    @Html.Raw(JornadaHelper.GetInstance().ObtenerLabelDocumentacionAdicional(Model))
                                </td>
                            }
                        </tr>
                    </table>
                </td>
            </tr>
     
            @*
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                    <label style="font-size:small;color:#000000">@Model.CuposDisponiblesTexto</label>
                </td>
            </tr>
            *@
        </table>
    </div>

    @*No se muestran los datos de auditoría para los usuarios de inscripción externa*@
    @if (!HttpContext.Current.User.IsInRole("InscripcionesExternas"))
    { 
        @Html.Partial("_DatosModificacionPartial", Model)
    }

    @{
        string classAccionCuposDisponibles = string.Empty;
        string textoAccionCuposDisponibles = string.Empty;

        string classAccionJornadaAutorizadas = string.Empty;
        string textoAccionJornadaAutorizadas = string.Empty;
    }

    
    @if (Model.CuposDisponibles) //si hay cupos disponibles se muestra la opción para deshabilitarlos
    {
        classAccionCuposDisponibles = "glyphicon glyphicon-stop";
        textoAccionCuposDisponibles = "Deshabilitar Cupos";
    }
    else //si NO hay cupos disponibles se muestra la opción para habilitarlos
    {
        classAccionCuposDisponibles = "glyphicon glyphicon-play";
        textoAccionCuposDisponibles = "Habilitar Cupos";
    }

    @*Solo los usuarios con rol Administrador pueden autorizar las jornadas*@
    @if (HttpContext.Current.User.IsInRole("Administrador"))
    {
        if (!Model.Autorizada) //si la jornada no está autorizada se muestra la opción para autorizarla
        {
            classAccionJornadaAutorizadas = "glyphicon glyphicon-ok-sign";
            textoAccionJornadaAutorizadas = "Autorizar";
        }
        else
        {
            classAccionJornadaAutorizadas = "glyphicon glyphicon-remove-sign";
            textoAccionJornadaAutorizadas = "No Autorizar";
        }
    }

    @*Los usuarios con perfil InscripcionesExternas no tienen acceso al menú de opciones*@
    @if (!HttpContext.Current.User.IsInRole("InscripcionesExternas"))
    {
        <p style="vertical-align: middle;">
            <a href="@Url.Action("Index") "><span class="glyphicon glyphicon-circle-arrow-left" style="font-size: 25px; color: #017d49"></span>&nbsp;Regresar</a>
            &nbsp;&nbsp;&nbsp;
            @if (Model.RequiereAutorizacion)
            {
                <a href="@Url.Action("ToggleAutorizada", new { id = Model.JornadaID })"><span class="@classAccionJornadaAutorizadas" style="font-size: 25px; color: #017d49"></span>&nbsp;@textoAccionJornadaAutorizadas</a>
                @:&nbsp;&nbsp; &nbsp; &nbsp;
            }
            @if (Model.Autorizada == true)
            {
                <a href="@Url.Action("Details", new { id = Model.JornadaID, exportarExcel = true })"><span class="glyphicon glyphicon-share" style="font-size: 25px; color: #017d49"></span>&nbsp;Exportar a Excel</a>
                @:&nbsp; &nbsp; &nbsp;
                <a href="@Url.Action("Create", new { id = Model.JornadaID })"><span class="glyphicon glyphicon-paperclip" style="font-size: 25px; color: #017d49"></span>&nbsp;Copiar capacitados a otra jornada</a>
                @:&nbsp;&nbsp; &nbsp; &nbsp;
                <a href="@Url.Action("Details", new { id = Model.JornadaID, generarActa = true })"><span class="glyphicon glyphicon-file" style="font-size: 25px; color: #017d49"></span>&nbsp;Generar Acta</a>
                @:&nbsp;&nbsp; &nbsp; &nbsp;
                <a href="@Url.Action("IngresarCalificaciones", new { id = Model.JornadaID })"><span class="glyphicon glyphicon-list-alt" style="font-size: 25px; color: #017d49"></span>&nbsp;Ingresar calificaciones</a>
                @:&nbsp;&nbsp; &nbsp; &nbsp;
                if (Model.PermiteEnviosOVAL)
                {
                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                            OVAL
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li class="btnEnvioRegistrosOVALJornada" data-jornadaid="@Model.JornadaID.ToString()" style="cursor: pointer;"><a href="#">Enviar datos</a></li>
                            <li><a href="@Url.Action("Details", new { id = Model.JornadaID, generarReporteOVAL = true })">Reporte de envíos</a></li>
                        </ul>
                    </div>
                    <!--<span class="glyphicon glyphicon-transfer btnEnvioRegistrosOVALJornada" data-jornadaid="@Model.JornadaID.ToString()" style="font-size: 25px; color: #017d49; cursor: pointer;"></span>-->
                    @*:&nbsp;&nbsp; &nbsp; &nbsp;*@
                }
                @*:&nbsp;&nbsp; &nbsp; &nbsp;
                <a href="@Url.Action("ToggleCuposDisponibles", new { id = Model.JornadaID })"><span class="@classAccionCuposDisponibles" style="font-size: 25px; color: #017d49"></span>&nbsp;@textoAccionCuposDisponibles</a>
                *@
                }
        </p>

        <hr />
    }

 </div>

@if (Model.PuedeAgregarActaUsuarioActual)
{
    //si aún no se agregó el archivo del acta
    if (Model.PathArchivo == null)
    {
    <div>
        <button data-toggle="collapse" data-target="#divAgregarActa" class="btn btn-default" onclick="toggleImgAgregarActaChevron();">Agregar Acta&nbsp;&nbsp;<span id="imgAgregarActaChevron" class="glyphicon glyphicon-chevron-down"></span></button>
    </div>

    <div id="divAgregarActa" class="collapse well" style="background-color: whitesmoke">
        @using (Html.BeginForm("AgregarActa", "Jornadas", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.JornadaID)

            <div class="form-group">
                <div class="col-md-4">
                    <input type="file" id="Acta" name="upload" class="btn btn-default" />
                </div>
                <div class="col-md-8">
                    <input type="submit" value="Agregar" class="btn btn-default" />
                </div>
            </div>
        }
        <br />
        <br />
    </div>
    }
    else //si ya se agregó el archivo del acta
    {
        using (Html.BeginForm("EliminarActa", "Jornadas", null, FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.JornadaID)

            <a href="~/images/Actas/@Model.PathArchivo.NombreArchivo" class="btn btn-default" target="_blank"><span class="glyphicon glyphicon-file"></span>&nbsp;&nbsp;Ver Acta</a>
            <input type="submit" value="Eliminar acta" class="btn btn-default" onclick="return confirm('¿Confirma eliminación del acta?')" />
            <br />
        }
    }
}

<br />

@{
    string estilo = CSSHelper.GetInstance().ObtenerEstiloVisible(Model.PuedeAgregarInscripcionesUsuarioActual);
}

<div id="dvBotonAgregarCapacitado" style="@estilo;">
    <button data-toggle="collapse" data-target="#demo" class="btn btn-default" onclick="toggleImgAgregarCapacitadoChevron();">Agregar Capacitado&nbsp;&nbsp;<span id="imgAgregarCapacitadoChevron" class="glyphicon glyphicon-chevron-down"></span></button>
</div>

<div id="demo" class="collapse well" style="@estilo;background-color: whitesmoke">
    <table>
    @*Los usuarios con perfil InscripcionesExternas solo tienen acceso al detalle de inscriptos a la jornada*@
    @if (HttpContext.Current.User.IsInRole("InscripcionesExternas"))
    {
        <tr>
            <td><div class="alert alert-warning"><strong>Atención!</strong> Se solicita puntualidad, no se permite el ingreso al aula pasado 15 minutos de la hora fijada de inicio.</div></td>
        </tr>
        if (Model.CursoId == 4) //solo se muestra este mensaje para los cursos de Inducción
        {
            <tr>
                <td><div class="alert alert-info"><strong>REQUISITO EXCLUYENTE:</strong> PARA PARTICIPAR DE LAS INDUCCIONES LOS ASISTENTES  DEBEN TENER <strong>TEST PCR-RT CON RESULTADO NEGATIVO A COVID-19 NO MAYOR A 3 DÍAS.</strong></div></td>
            </tr>
        }
        if (Model.CursoId == 4 || Model.CursoId == 5) //solo se muestra este mensaje para los cursos de Inducción
        {
            <tr>
                <td><div class="alert alert-danger"><strong>RECUERDE QUE SI NO SE ENCUENTRA EN OVAL SERÁ DADO DE BAJA SE LE COMUNICARÁ POR MAIL</strong></div></td>
            </tr>
        }
    }
        <tr>
            <td>
                <div class="form-inline" style="margin:5px 3px;">
                    <div class="form-group">
                        <div class="col-md-5">
                            @Html.Label("Documento"):
                        </div>
                        <div class="col-md-10">
                            @Html.TextBox("documento", "", new { htmlAttributes = new { @class = "form-control" } })
                            &nbsp;&nbsp;&nbsp;
                            <button class="btn btn-default" onclick="buscarCapacitados();"><span class="glyphicon glyphicon-search"></span>&nbsp;Buscar</button>
                            &nbsp;&nbsp;&nbsp;
                            <button class="btn btn-default" onclick="crearCapacitado();"><span class="glyphicon glyphicon-user"></span>&nbsp;Crear nuevo</button>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <br />
    <div id="dvSeleccionarCapacitados">
        @Html.Partial("_SeleccionarCapacitadosPartial", new List<Cursos.Models.Capacitado>())
    </div>
</div>

<br />

@*Los usuarios con perfil InscripcionesExternas solo tienen acceso al detalle de inscriptos a la jornada*@
@if (HttpContext.Current.User.IsInRole("InscripcionesExternas"))
{
    <h4>Inscriptos a la jornada</h4>

    <div id="tabRegistrosCapacitacion">
        @Html.Partial("_ListRegistrosCapacitacionPartial", Model.RegistrosCapacitacion)
    </div>
}
else
{
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tabRegistrosCapacitacion">Inscriptos a la jornada</a></li>
        <li><a data-toggle="tab" href="#tabFotos">Fotos</a></li>
        @if (Model.PermiteEnviosOVAL)
        {
            <li><a data-toggle="tab" href="#tabEnviosOVAL">Envíos OVAL</a></li>
        }
    </ul>

    <div class="tab-content">
        <div id="tabRegistrosCapacitacion" class="tab-pane fade in active">
            @Html.Partial("_ListRegistrosCapacitacionPartial", Model.RegistrosCapacitacion)
        </div>
        <div id="tabFotos" class="tab-pane fade">
            @Html.Partial("_ListRegistrosCapacitacionFotosPartial", Model.RegistrosCapacitacion)
        </div>
        @if (Model.PermiteEnviosOVAL)
        {
            <div id="tabEnviosOVAL" class="tab-pane fade">
                @{
                    int enviosOVALPageSize = Model.RegistrosCapacitacion.Count() > 0 ? Model.RegistrosCapacitacion.Count() : 1;
                }
                @Html.Partial("_ListRegistrosCapacitacionOvalPartial", Model.RegistrosCapacitacion.AsQueryable().ToPagedList(1, enviosOVALPageSize))
            </div>
        }
    </div>
}

@section Scripts {

    @Scripts.Render("~/Scripts/enviarOval.js")
    @Scripts.Render("~/Scripts/documentacionAdicional.js")

    <script type="text/javascript">

        //al cerrar la ventana modal, se recarga la página para actualizar los valores de la tabla
        $('#modalMensaje').on('hidden.bs.modal', function () {
            actualizarContenidoTabs();
            //$("#bodyMensaje").html("<p>Enviando datos al sistema OVAL. No cierre esta ventana.</p>");
            var linea1 = '<p style="font-weight: bold;">Enviando datos al sistema OVAL</p>'
            var linea2 ='<p style="font-size: small;">@string.Format("Punto de servicio: {0}", Model.Curso.PuntoServicio != null ? Model.Curso.PuntoServicio.Nombre : string.Empty)</p>'
            var linea3 ='<p style="font-weight: bold; color: darkred">No cierre esta ventana</p>'
            
            $("#bodyMensaje").html(linea1.concat(linea2, linea3));
        });

        $("#fotoCapacitado").change(function (e) {
            loadImage(
                e.target.files[0],
                function (img) {
                    alert("Cargando foto!");

                    //se define una variable de tipo FormData, porque los parámetros de entrada se van a pasar por post
                    var formData = new FormData();
                    formData.append('foto', img);

                    $.ajax({
                    url: '/Capacitados/CargarFotoCapacitado',
                    type: "POST",
                    dataType: "JSON",
                    data: formData,
                    contentType: false,
                    processData: false,
                            success: function (resultadoOK)
                             {
                                if (resultadoOK)
                                {
                                    alert("Funcionó!")
                                    /*
                                    //buscarCapacitados();
                                    actualizarDisponibilidadJornada();
                                    //$("#spanCantidadCuposDisponibles").text("Se agregó otro capacitado");
                                    */
                                }
                                else
                                {
                                    alert("ERROR - NO Funcionó!")
                                }
                             }
                           });

                    document.body.appendChild(img); //se agrgega en el body del documento para visualizar,
                },
                {orientation: 6} // Options
            );
        });

        function toggleImgAgregarActaChevron()
        {
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-down");
        }

        function toggleImgAgregarCapacitadoChevron()
        {
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-down");
        }

        function buscarCapacitados()
        {
            var documento = $("#documento").val();

            if (documento != '')
            {
                $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerCargando", "CustomTools"))');
                    $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerSelecionarCapacitados", "Capacitados",null, Request.Url.Scheme))?documento=' + documento + '&jornadaIdExcluir=' + @Model.JornadaID);
                }
                else
                {
                    $("#dvSeleccionarCapacitados").html('<div class="alert alert-warning"><strong>Atención!</strong> Debe ingresar un documento para hacer la búsqueda.</div>');
                }
            }

            function crearCapacitado()
            {
                location.href='@Url.Action("Create", "Capacitados", new { jornadaId = Model.JornadaID })'
            }

            function seleccionarCapacitado(capacitadoId)
            {
                $("#tdSeleccionarCapacitado").load('@(Url.Action("ObtenerCargandoMini", "CustomTools"))');

                var jornadaId = @Model.JornadaID;

                $.ajax({
                    url: '/Jornadas/ObtenerDatosDisponibilidadCupos',
                    type: "GET",
                    dataType: "JSON",
                    data: { JornadaId: jornadaId},
                    success: function (datosDisponiblidadCupos)
                    {
                        if (datosDisponiblidadCupos.QuedanCuposDisponibles)
                        {
                            $.ajax({
                                url: '/Jornadas/AgregarRegistroCapacitacion',
                                type: "GET",
                                dataType: "JSON",
                                data: { jornadaId: jornadaId,
                                    capacitadoId: capacitadoId },
                                success: function (resultadoOK)
                                {
                                    if (resultadoOK)
                                    {
                                        actualizarContenidoTabs();
                                        actualizarDisponibilidadJornada();
                                        actualizarLabelsDocumentacionAdicional();
                                    }
                                }
                            });
                        }
                        else
                        {
                            alert('Ya no quedan cupos disponibles. No es posible realizar la inscripción.');
                            location.reload(true); //se recarga la página para que se actualice la no disponibilidad de cupos
                        }
                    }
                });
            }

            function actualizarDisponibilidadJornada()
            {
                var jornadaId = @Model.JornadaID;
                $.ajax({
                    url: '/Jornadas/ObtenerDatosDisponibilidadCupos',
                    type: "GET",
                    dataType: "JSON",
                    data: { JornadaId: jornadaId},
                    success: function (datosDisponiblidadCupos)
                    {
                        $("#tdCantidadInscriptos").html(datosDisponiblidadCupos.LabelTotalInscriptos);
                        $("#tdCantidadCuposDisponibles").html(datosDisponiblidadCupos.LabelTotalCuposDisponibles);

                        if (datosDisponiblidadCupos.QuedanCuposDisponibles)
                        {
                            if ($("#documento").val() != "")
                                buscarCapacitados();

                            //alert("Aún quedan cupos disponibles");
                            $("#dvBotonAgregarCapacitado").show();
                            $("#demo").show();
                        }
                        else
                        {
                            //se ocultan las opciones para agregar nuevos incriptos
                            $("#dvBotonAgregarCapacitado").hide();
                            $("#demo").hide();

                            //se vacía el contenido del DIV que incluye los resultados de búsqueda y el cuadro de texto de búsqueda por documento
                            $("#documento").val("");
                            $("#dvSeleccionarCapacitados").html("");
                        }
                    }
                });
            }

            function eliminarRegistroCapacitacion(registroCapacitacionId)
            {
                $.ajax({
                    url: '/RegistrosCapacitacion/EliminarRegistroCapacitacion',
                    type: "GET",
                    dataType: "JSON",
                    data: { registroCapacitacionId: registroCapacitacionId },
                    success: function (resultadoOK)
                    {
                        if (resultadoOK)
                        {
                            actualizarContenidoTabs()
                            actualizarDisponibilidadJornada();
                        }
                    }
                });
            }

            function actualizarContenidoTabs()
            {
                $("#tabRegistrosCapacitacion").load('@(Url.Action("ObtenerRegistrosCapacitacionJornada", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);

                //se verifica y el tab de detalle de fotos está visible
                if ($("#tabFotos").length)
                    $("#tabFotos").load('@(Url.Action("ObtenerRegistrosCapacitacionFotos", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);

                //se verifica y el tab de detalle de envíos OVAL está visible
                if ($("#tabEnviosOVAL").length)
                    $("#tabEnviosOVAL").load('@(Url.Action("ObtenerRegistrosCapacitacionOVAL", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);
            }

    </script>
}
