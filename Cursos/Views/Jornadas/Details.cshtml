@model Cursos.Models.Jornada

@{
    ViewBag.Title = "Jornada - Detalles";
}

<div>
    <div style="background-color: whitesmoke; padding-left: 10px; padding-bottom: 10px; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
        <table>
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px"><h4>Jornada</h4></td>
                <td style="padding-right: 10px"><h3><span class="label label-default" style="color: #333333; background-color: @Model.Curso.ColorDeFondo">@Html.DisplayFor(model => model.Curso.Descripcion)</span></h3></td>
                <td style="vertical-align: bottom; padding-right: 10px"><h4>@String.Format("{0} {1} - {2} - {3}", Model.Fecha.ToShortDateString(), Model.Hora.Trim(), Model.Lugar.NombreLugar, Model.Instructor.NombreCompleto)</h4></td>
            </tr>
        </table>
    </div>

    @Html.Partial("_DatosModificacionPartial", Model)

    <p style="vertical-align: middle;">
        <a href="@Url.Action("Index") "><span class="glyphicon glyphicon-circle-arrow-left" style="font-size: 25px; color: #017d49"></span>&nbsp;Regresar</a>
        &nbsp;&nbsp;&nbsp;
        <a href="@Url.Action("Details", new { id = Model.JornadaID, exportarExcel = true })"><span class="glyphicon glyphicon-share" style="font-size: 25px; color: #017d49"></span>&nbsp;Exportar a Excel</a>
        &nbsp;&nbsp;&nbsp;
        <a href="@Url.Action("Create", new { id = Model.JornadaID })"><span class="glyphicon glyphicon-paperclip" style="font-size: 25px; color: #017d49"></span>&nbsp;Copiar capacitados a otra jornada</a>
        &nbsp;&nbsp;&nbsp;
        <a href="@Url.Action("Details", new { id = Model.JornadaID, generarActa = true })"><span class="glyphicon glyphicon-file" style="font-size: 25px; color: #017d49"></span>&nbsp;Generar Acta</a>
    </p>
    
    <hr />

 </div>

@if (Model.PuedeModificarse())
{
    <div>
        <button data-toggle="collapse" data-target="#divAgregarActa" class="btn btn-default" onclick="toggleImgAgregarActaChevron();">Agregar Acta&nbsp;&nbsp;<span id="imgAgregarActaChevron" class="glyphicon glyphicon-chevron-down"></span></button>
    </div>

    <div id="divAgregarActa" class="collapse well" style="background-color: whitesmoke">
        @using (Html.BeginForm("AgregarActa", "Jornadas", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.JornadaID)

            <div class="form-group">
                @Html.Label("Acta", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="Acta" name="upload" />
                </div>
            </div>

            <input type="submit" value="Agregar" />
        }
    </div>

    <br />

    <div>
        <button data-toggle="collapse" data-target="#demo" class="btn btn-default" onclick="toggleImgAgregarCapacitadoChevron();">Agregar Capacitado&nbsp;&nbsp;<span id="imgAgregarCapacitadoChevron" class="glyphicon glyphicon-chevron-down"></span></button>
    </div>

    <div id="demo" class="collapse well" style="background-color: whitesmoke">
        <table>
            <tr>
                <td>
                    <div class="form-inline" style="margin:5px 3px;">
                        <div class="form-group">
                            <div class="col-md-5">
                                @Html.Label("Documento"):
                            </div>
                            <div class="col-md-10">
                                @Html.TextBox("documento", "", new { htmlAttributes = new { @class = "form-control" } })
                                &nbsp;&nbsp;&nbsp;
                                <button class="btn btn-default" onclick="buscarCapacitados();"><span class="glyphicon glyphicon-search"></span>&nbsp;Buscar</button>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <br />
        <div id="dvSeleccionarCapacitados">
            @Html.Partial("_SeleccionarCapacitadosPartial", new List<Cursos.Models.Capacitado>())
        </div>
    </div>

    <br />
}

<h4>Registros de capacitación</h4>

@if (Model.PuedeModificarse() && Model.Curso.EvaluacionConNota == false)
{
    <button class="btn btn-default" onclick="marcarTodosAprobados();"><span class="glyphicon glyphicon-check"></span>&nbsp;Marcar todos como aprobados</button>

    <br />
    <br />
}

<div id="dvRegistrosCapacitacion">
    @Html.Partial("_ListRegistrosCapacitacionPartial", Model.RegistrosCapacitacion)
</div>

@section Scripts {
    <script type="text/javascript">

        function toggleImgAgregarActaChevron()
        {
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-down");
        }
        
        function toggleImgAgregarCapacitadoChevron()
        {
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-down");
        }

        function buscarCapacitados()
        {
            var documento = $("#documento").val();

            if (documento != '')
            {
                $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerCargando", "CustomTools"))');
                $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerSelecionarCapacitados", "Capacitados",null, Request.Url.Scheme))?documento=' + documento + '&jornadaIdExcluir=' + @Model.JornadaID);
            }
            else
            {
                $("#dvSeleccionarCapacitados").html('<div class="alert alert-warning"><strong>Atención!</strong> Debe ingresar un documento para hacer la búsqueda.</div>');
            }
        }

        function seleccionarCapacitado(capacitadoId)
        {
            var jornadaId = @Model.JornadaID;
            $.ajax({
                url: '/Jornadas/AgregarRegistroCapacitacion',
                type: "GET",
                dataType: "JSON",
                data: { jornadaId: jornadaId,
                        capacitadoId: capacitadoId },
                success: function (resultadoOK)
                         {
                            if (resultadoOK)
                            {
                                $("#dvRegistrosCapacitacion").load('@(Url.Action("ObtenerRegistrosCapacitacionJornada", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);
                                buscarCapacitados();
                            }
                         }
            });
        }

        function marcarTodosAprobados()
        {
            if (confirm("¿Marcar todos los registros como aprobados?"))
            {
                var jornadaId = @Model.JornadaID;
                $.ajax({
                    url: '/Jornadas/SetearRegistroCapacitacionEstado',
                    type: "GET",
                    dataType: "JSON",
                    data: { jornadaId: jornadaId,
                            estado: 1 },
                    success: function (resultadoOK)
                    {
                        if (resultadoOK)
                        {
                            $("#dvRegistrosCapacitacion").load('@(Url.Action("ObtenerRegistrosCapacitacionJornada", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);
                        }
                    }
                });
            }
        }

    </script>
}
