@model Cursos.Models.Jornada
@using Cursos.Helpers;

@{
    ViewBag.Title = "Jornada - Detalles";
}

<div>
    <div style="background-color: whitesmoke; padding-left: 10px; padding-bottom: 10px; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
        <table>
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px"><h4>Jornada</h4></td>
                <td style="padding-right: 10px"><h3><span class="label label-default" style="color: #333333; background-color: @Model.Curso.ColorDeFondo">@Html.DisplayFor(model => model.Curso.Descripcion)</span></h3></td>
                <td style="vertical-align: bottom; padding-right: 10px"><h3>@String.Format("{0} {1} - {2} - {3}", Model.Fecha.ToShortDateString(), Model.Hora.Trim(), Model.Lugar.NombreLugar, Model.Instructor.NombreCompleto)</h3></td>
            </tr>
            @if (Model.RequiereAutorizacion)
            {
                <tr>
                    <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                        <label style="font-size:small;color:#000000">@Model.CreadaTexto</label>
                        &nbsp;&nbsp;
                        <label style="font-size:small;color:darkred">@Model.AutorizadaTexto</label>
                    </td>
                </tr>
            }
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                    <table>
                        <tr>
                            <td style="padding-right: 10px">
                                @if (Model.TieneMaximoAsistentes)
                                {
                                    if (Model.QuedanCuposDisponibles)
                                    {
                                        <h4><span id="spanCantidadCuposDisponibles" class="label label-success">@Model.CantidadCuposDisponiblesTexto</span></h4>
                                    }
                                    else
                                    {
                                        <h4><span id="spanCantidadCuposDisponibles" class="label label-danger">Sin cupos disponibles</span></h4>
                                    }
                                }
                            </td>
                        </tr>
                    </table>	
                </td>
            </tr>
            @*
            <tr>
                <td style="vertical-align: bottom; padding-right: 10px" colspan="3">
                    <label style="font-size:small;color:#000000">@Model.CuposDisponiblesTexto</label>
                </td>
            </tr>
            *@
        </table>
    </div>

    @Html.Partial("_DatosModificacionPartial", Model)

    @{
        string classAccionCuposDisponibles = string.Empty;
        string textoAccionCuposDisponibles = string.Empty;

        string classAccionJornadaAutorizadas = string.Empty;
        string textoAccionJornadaAutorizadas = string.Empty;
    }

    
    @if (Model.CuposDisponibles) //si hay cupos disponibles se muestra la opción para deshabilitarlos
    {
        classAccionCuposDisponibles = "glyphicon glyphicon-stop";
        textoAccionCuposDisponibles = "Deshabilitar Cupos";
    }
    else //si NO hay cupos disponibles se muestra la opción para habilitarlos
    {
        classAccionCuposDisponibles = "glyphicon glyphicon-play";
        textoAccionCuposDisponibles = "Habilitar Cupos";
    }

    @if (!Model.Autorizada) //si la jornada no está autorizada se muestra la opción para eliminar la autorización
    {
        classAccionJornadaAutorizadas = "glyphicon glyphicon-ok-sign";
        textoAccionJornadaAutorizadas = "Autorizar";
    }
    else
    {
        classAccionJornadaAutorizadas = "glyphicon glyphicon-remove-sign";
        textoAccionJornadaAutorizadas = "No Autorizar";
    }

    <p style="vertical-align: middle;">
        <a href="@Url.Action("Index") "><span class="glyphicon glyphicon-circle-arrow-left" style="font-size: 25px; color: #017d49"></span>&nbsp;Regresar</a>
        &nbsp;&nbsp;&nbsp;
        @if (Model.RequiereAutorizacion)
        {
            <a href="@Url.Action("ToggleAutorizada", new { id = Model.JornadaID })"><span class="@classAccionJornadaAutorizadas" style="font-size: 25px; color: #017d49"></span>&nbsp;@textoAccionJornadaAutorizadas</a>
            @:&nbsp;&nbsp; &nbsp; &nbsp;
        }
        @if (Model.Autorizada == true)
        {
            <a href="@Url.Action("Details", new { id = Model.JornadaID, exportarExcel = true })"><span class="glyphicon glyphicon-share" style="font-size: 25px; color: #017d49"></span>&nbsp;Exportar a Excel</a>
            @:&nbsp; &nbsp; &nbsp;
            <a href="@Url.Action("Create", new { id = Model.JornadaID })"><span class="glyphicon glyphicon-paperclip" style="font-size: 25px; color: #017d49"></span>&nbsp;Copiar capacitados a otra jornada</a>
            @:&nbsp;&nbsp; &nbsp; &nbsp;
            <a href="@Url.Action("Details", new { id = Model.JornadaID, generarActa = true })"><span class="glyphicon glyphicon-file" style="font-size: 25px; color: #017d49"></span>&nbsp;Generar Acta</a>
            @*:&nbsp;&nbsp; &nbsp; &nbsp;
            <a href="@Url.Action("ToggleCuposDisponibles", new { id = Model.JornadaID })"><span class="@classAccionCuposDisponibles" style="font-size: 25px; color: #017d49"></span>&nbsp;@textoAccionCuposDisponibles</a>
            *@
        }
        
    </p>

    <hr />

 </div>

@if (Model.PuedeModificarse())
{
    if (Model.Autorizada)
    {
        //si aún no se agregó el archivo del acta
        if (Model.PathArchivo == null)
        {
        <div>
            <button data-toggle="collapse" data-target="#divAgregarActa" class="btn btn-default" onclick="toggleImgAgregarActaChevron();">Agregar Acta&nbsp;&nbsp;<span id="imgAgregarActaChevron" class="glyphicon glyphicon-chevron-down"></span></button>
        </div>

        <div id="divAgregarActa" class="collapse well" style="background-color: whitesmoke">
            @using (Html.BeginForm("AgregarActa", "Jornadas", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.JornadaID)

                <div class="form-group">
                    <div class="col-md-4">
                        <input type="file" id="Acta" name="upload" class="btn btn-default" />
                    </div>
                    <div class="col-md-8">
                        <input type="submit" value="Agregar" class="btn btn-default" />
                    </div>
                </div>
            }
            <br />
            <br />
        </div>
        }
        else //si ya se agregó el archivo del acta
        {
            using (Html.BeginForm("EliminarActa", "Jornadas", null, FormMethod.Post))
            {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.JornadaID)

            <a href="~/images/Actas/@Model.PathArchivo.NombreArchivo" class="btn btn-default" target="_blank"><span class="glyphicon glyphicon-file"></span>&nbsp;&nbsp;Ver Acta</a>
            <input type="submit" value="Eliminar acta" class="btn btn-default" onclick="return confirm('¿Confirma eliminación del acta?')" />
            <br />
            }
        }
        <br />
    }

    string estilo = CSSHelper.GetInstance().ObtenerEstiloVisible(Model.QuedanCuposDisponibles);

    <div id="dvBotonAgregarCapacitado" style="@estilo;">
        <button data-toggle="collapse" data-target="#demo" class="btn btn-default" onclick="toggleImgAgregarCapacitadoChevron();">Agregar Capacitado&nbsp;&nbsp;<span id="imgAgregarCapacitadoChevron" class="glyphicon glyphicon-chevron-down"></span></button>
    </div>

    <div id="demo" class="collapse well" style="@estilo;background-color: whitesmoke">
        <table>
            <tr>
                <td>
                    <div class="form-inline" style="margin:5px 3px;">
                        <div class="form-group">
                            <div class="col-md-5">
                                @Html.Label("Documento"):
                            </div>
                            <div class="col-md-10">
                                @Html.TextBox("documento", "", new { htmlAttributes = new { @class = "form-control" } })
                                &nbsp;&nbsp;&nbsp;
                                <button class="btn btn-default" onclick="buscarCapacitados();"><span class="glyphicon glyphicon-search"></span>&nbsp;Buscar</button>
                                &nbsp;&nbsp;&nbsp;
                                <button class="btn btn-default" onclick="crearCapacitado();"><span class="glyphicon glyphicon-user"></span>&nbsp;Crear nuevo</button>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <br />
        <div id="dvSeleccionarCapacitados">
            @Html.Partial("_SeleccionarCapacitadosPartial", new List<Cursos.Models.Capacitado>())
        </div>
    </div>

    <br />
}

<h4>Registros de capacitación</h4>

@if (Model.Autorizada && Model.PuedeModificarse() && Model.Curso.EvaluacionConNota == false)
{
    <button class="btn btn-default" onclick="marcarTodosAprobados();"><span class="glyphicon glyphicon-check"></span>&nbsp;Marcar todos como aprobados</button>

    <br />
    <br />
}

@if (Model.TieneMaximoAsistentes)
{
    if (Model.QuedanCuposDisponibles)
    {
        <h4><span id="spanCantidadCuposDisponibles" class="label label-success">@Model.CantidadCuposDisponiblesTexto</span></h4>
    }
    else
    {
        <h4><span id="spanCantidadCuposDisponibles" class="label label-danger">Sin cupos disponibles</span></h4>
    }
}

<div id="dvRegistrosCapacitacion">
    @Html.Partial("_ListRegistrosCapacitacionPartial", Model.RegistrosCapacitacion)
</div>

@section Scripts {
    <script type="text/javascript">

        function toggleImgAgregarActaChevron()
        {
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarActaChevron").toggleClass("glyphicon-chevron-down");
        }

        function toggleImgAgregarCapacitadoChevron()
        {
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-up");
            $("#imgAgregarCapacitadoChevron").toggleClass("glyphicon-chevron-down");
        }

        function buscarCapacitados()
        {
            var documento = $("#documento").val();

            if (documento != '')
            {
                $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerCargando", "CustomTools"))');
                $("#dvSeleccionarCapacitados").load('@(Url.Action("ObtenerSelecionarCapacitados", "Capacitados",null, Request.Url.Scheme))?documento=' + documento + '&jornadaIdExcluir=' + @Model.JornadaID);
            }
            else
            {
                $("#dvSeleccionarCapacitados").html('<div class="alert alert-warning"><strong>Atención!</strong> Debe ingresar un documento para hacer la búsqueda.</div>');
            }
        }

        function crearCapacitado()
        {
            location.href='@Url.Action("Create", "Capacitados", new { jornadaId = Model.JornadaID })'
        }

        function seleccionarCapacitado(capacitadoId)
        {
            var jornadaId = @Model.JornadaID;
            $.ajax({
                url: '/Jornadas/AgregarRegistroCapacitacion',
                type: "GET",
                dataType: "JSON",
                data: { jornadaId: jornadaId,
                        capacitadoId: capacitadoId },
                        success: function (resultadoOK)
                         {
                            if (resultadoOK)
                            {
                                $("#dvRegistrosCapacitacion").load('@(Url.Action("ObtenerRegistrosCapacitacionJornada", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);
                                buscarCapacitados();
                                actualizarDisponibilidadJornada();
                                //$("#spanCantidadCuposDisponibles").text("Se agregó otro capacitado");
                            }
                         }
            });
        }

        function marcarTodosAprobados()
        {
            if (confirm("¿Marcar todos los registros como aprobados?"))
            {
                var jornadaId = @Model.JornadaID;
                $.ajax({
                    url: '/Jornadas/SetearRegistroCapacitacionEstado',
                    type: "GET",
                    dataType: "JSON",
                    data: { jornadaId: jornadaId,
                            estado: 1 },
                    success: function (resultadoOK)
                    {
                        if (resultadoOK)
                        {
                            $("#dvRegistrosCapacitacion").load('@(Url.Action("ObtenerRegistrosCapacitacionJornada", "Jornadas",null, Request.Url.Scheme))?jornadaId=' + @Model.JornadaID);
                        }
                    }
                });
            }
        }

        function actualizarDisponibilidadJornada()
        {
            var jornadaId = @Model.JornadaID;
            $.ajax({
                url: '/Jornadas/ObtenerDatosDisponibilidadCupos',
                type: "GET",
                dataType: "JSON",
                data: { JornadaId: jornadaId},
                success: function (datosDisponiblidadCupos)
                {
                    $("#spanCantidadCuposDisponibles").text(datosDisponiblidadCupos[0]);
                    
                    if (datosDisponiblidadCupos[1] == "True")
                    {
                        //alert("Aún quedan cupos disponibles");
                        $("#dvBotonAgregarCapacitado").show();
                        $("#demo").show();
                    }
                    else
                    {
                        //alert("Ya no quedan cupos disponibles");
                        $("#dvBotonAgregarCapacitado").hide();
                        $("#demo").hide();
                    }
                }
            });
        }

    </script>
}
